docker run -i projectdiscovery/httpx


cat ipport.txt | docker run -i projectdiscovery/httpx    -status-code -title -tech-detect -web-server -content-type -content-length -no-fallback -t 200 -v >> xxx.txt

cat ipport.txt | docker run -i projectdiscovery/httpx  -status-code -title -tech-detect -web-server -no-fallback -t 100 -v >> 100.txt

VAR1=192.168.0.0/16
VAR2=10.0.0.0/10
VAR3=172.16.0.0/12

     echo ----------------$VAR1----------------
docker run --rm sha512sum/masscan -p80,443 -pU 80 --rate=10000 $VAR1 >> ip192.txt # Save scan web Range 
python3 fileformatter1.py # here we clean the brut file
cat ip192.txt | docker run -i projectdiscovery/httpx -status-code -title -tech-detect -web-server -method -no-fallback -t 100 -v >> results.txt
rm ip192.txt # remove the temporary file

     echo ----------------$VAR2----------------
docker run --rm sha512sum/masscan -p80,443 -pU 80 --rate=10000 $VAR2 >> ip10.txt # Save scan web Range 
python3 fileformatter2.py # here we clean the brut file
cat ip10.txt | docker run -i projectdiscovery/httpx -status-code -title -tech-detect -web-server -method -no-fallback -t 100 -v >> results.txt
rm ip10.txt # remove the temporary file

     echo ----------------$VAR3----------------
docker run --rm sha512sum/masscan -p80,443 -pU 80 --rate=10000 $VAR3 >> ip172.txt # Save scan web Range 
python3 fileformatter3.py # here we clean the brut file
cat ip172.txt | docker run -i projectdiscovery/httpx -status-code -title -tech-detect -web-server -method -no-fallback -t 100 -v >> results.txt
rm ip172.txt # remove the temporary file


 echo ----------------$VAR1----------------
python2 svmap.py -m INVITE -v -t0.0 $VAR1 >> results.txt

     echo ----------------$VAR2----------------
python2 svmap.py -m INVITE -v -t0.0 $VAR2 >> results.txt

     echo ----------------$VAR3----------------
python2 svmap.py -m INVITE -v -t0.0 $VAR3 >> results.txt
